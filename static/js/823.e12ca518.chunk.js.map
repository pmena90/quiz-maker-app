{"version":3,"file":"static/js/823.e12ca518.chunk.js","mappings":"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","sources":["components/MyModal/index.js","components/ModalDemoPage/ModalExample.js","components/ModalDemoPage/DialogExample.js","components/ModalDemoPage/index.js"],"sourcesContent":["import { useEffect, useRef, useState } from \"react\";\r\nimport './style.css';\r\n\r\nconst MyModal = ({ backdrop, showModal, setShowModal, children }) => {\r\n    const [visible, setVisible] = useState(showModal);\r\n    const [show, setShow] = useState(showModal);\r\n    const modalRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        // Add a delay before showing the modal to allow the fade-in animation\r\n        let timeout;\r\n\r\n        if (showModal) {\r\n            setShow(showModal);\r\n            timeout = setTimeout(() => {\r\n                setVisible(showModal);\r\n                modalRef.current.focus();\r\n            }, 100);\r\n        } else {\r\n            setVisible(showModal);\r\n            timeout = setTimeout(() => {\r\n                setShow(showModal);\r\n            }, 100);\r\n        }\r\n\r\n        return () => clearTimeout(timeout);\r\n\r\n    }, [showModal]);\r\n\r\n    const closeModal = () => {\r\n        setShowModal(false);\r\n    };\r\n\r\n    const handleKeyPress = target => {\r\n        if (target.code === 'Escape') {\r\n            closeModal();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div onKeyUp={handleKeyPress}>\r\n\r\n            {/* Modal */}\r\n            <div ref={modalRef} className={`custom-modal modal fade ${visible ? 'show' : ''}`} tabIndex=\"-1\" role=\"dialog\" style={{ display: show ? 'block' : 'none' }} data-backdrop={backdrop} aria-hidden=\"true\">\r\n                <div className=\"modal-dialog\" role=\"document\">\r\n                    <div className=\"modal-content\">\r\n                        {children}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {/* <div className={` ${showModal ? 'modal-backdrop show' : ''}`}></div> */}\r\n            {(show && backdrop) && <div className={`modal-backdrop fade ${visible && backdrop ? 'show' : ''}`} onClick={closeModal}></div>}\r\n            {/* End Modal */}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MyModal;","import { useState } from \"react\";\r\nimport MyModal from \"../MyModal\";\r\n\r\nconst ModalExample = () => {\r\n    const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n    const handleModalDisplayToggle = () => {\r\n        setIsModalOpen(!isModalOpen);\r\n    }\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <div className=\"card-header\">\r\n                Modal Component Usage - Demo 1\r\n            </div>\r\n            <div className=\"card-body\">\r\n                <h5 className=\"card-title\">Modal style</h5>\r\n                <p className=\"card-text\">User has to close the modal to interact with the rest of the page</p>\r\n                <button className=\"btn btn-primary\" onClick={handleModalDisplayToggle}>Open Modal</button>\r\n            </div>\r\n            <MyModal backdrop={true} showModal={isModalOpen} setShowModal={setIsModalOpen}>\r\n                <div className=\"modal-body\">\r\n                    <p>Confirmation modal example. Are you sure you want to remove it?</p>\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                    <button type=\"button\" className=\"btn btn-secondary\" onClick={handleModalDisplayToggle}>Cancel</button>\r\n                    <button type=\"button\" className=\"btn btn-primary\" onClick={handleModalDisplayToggle}>Continue</button>\r\n                </div>\r\n            </MyModal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ModalExample;","import { useState } from \"react\";\r\nimport MyModal from \"../MyModal\";\r\n\r\nconst DialogExample = () => {\r\n    const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n\r\n    const handleDialogDisplayToggle = () => {\r\n        setIsDialogOpen(!isDialogOpen);\r\n    }\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <div className=\"card-header\">\r\n                Modal Component Usage - Demo 2\r\n            </div>\r\n            <div className=\"card-body\">\r\n                <h5 className=\"card-title\">Dialog style</h5>\r\n                <p className=\"card-text\">User can continue interacting with the page</p>\r\n                <button className=\"btn btn-primary\" onClick={handleDialogDisplayToggle}>Open Dialog</button>\r\n            </div>\r\n            <MyModal backdrop={false} showModal={isDialogOpen} setShowModal={setIsDialogOpen}>\r\n                <div className=\"modal-header\">\r\n                    <h5 className=\"modal-title\">Custom Dialog</h5>\r\n                    <button type=\"button\" className=\"close\" onClick={handleDialogDisplayToggle} aria-label=\"Close\">\r\n                        <span aria-hidden=\"true\">&times;</span>\r\n                    </button>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    <p>This is the modal content.</p>\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                    <button type=\"button\" className=\"btn btn-secondary\" onClick={handleDialogDisplayToggle}>Close</button>\r\n                    <button type=\"button\" className=\"btn btn-primary\" onClick={handleDialogDisplayToggle}>Save Changes</button>\r\n                </div>\r\n            </MyModal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogExample;","import Pagetitle from \"../PageTitle\"\r\nimport ModalExample from \"./ModalExample\";\r\nimport DialogExample from \"./DialogExample\";\r\n\r\nconst ModalDemoPage = () => {\r\n\r\n    return (\r\n        <div className='container'>\r\n            <div className=\"row\">\r\n                <Pagetitle title='Modal DEMO' />\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-6 mb-3\">\r\n                    <ModalExample />\r\n                </div>\r\n                <div className=\"col-12 col-md-6\">\r\n                    <DialogExample />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ModalDemoPage;\r\n"],"names":["_ref","backdrop","showModal","setShowModal","children","_useState","useState","_useState2","_slicedToArray","visible","setVisible","_useState3","_useState4","show","setShow","modalRef","useRef","useEffect","timeout","setTimeout","current","focus","clearTimeout","closeModal","_jsxs","onKeyUp","target","code","_jsx","ref","className","concat","tabIndex","role","style","display","onClick","isModalOpen","setIsModalOpen","handleModalDisplayToggle","MyModal","type","isDialogOpen","setIsDialogOpen","handleDialogDisplayToggle","Pagetitle","title","ModalExample","DialogExample"],"sourceRoot":""}